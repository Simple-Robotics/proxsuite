name: Release on PyPI [Windows, Mac]

on:
  pull_request:
    paths-ignore:
      - CHANGELOG.md
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # Only cancel workflow on new push if we are not releasing
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build-wheel:
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.os }} ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        os: [macos-13, macos-14, windows-latest]
        include:
          - os: windows-2019
            toolset: ClangCl
          - os: windows-latest
            toolset: v143

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set ownership
        run: |
          # Workaround for https://github.com/actions/runner/issues/2033
          # this is to fix GIT not liking owner of the checkout dir
          chown -R $(id -u):$(id -g) $PWD
          git submodule update

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          python-version: ${{ matrix.python-version }}
          activate-environment: proxsuite
          channels: conda-forge
          conda-remove-defaults: "true"

      - name: Install dependencies [Conda]
        if: contains(matrix.os, 'macos') || contains(matrix.os, 'windows')
        shell: bash -l {0}
        run: |
          conda install doxygen graphviz eigen simde cmake compilers typing_extensions

      - name: Print environment [Conda]
        shell: bash -l {0}
        run: |
          conda info
          conda list
          env

      - name: Build wheel
        if: contains(matrix.os, 'macos')
        shell: bash -l {0}
        run: |
          pip wheel . -w dist

      - name: Build wheel on windows
        if: contains(matrix.os, 'windows')
        shell: bash -l {0}
        env :
          CMEEL_CMAKE_ARGS: "-T${{ matrix.toolset }} -DBUILD_PYTHON_INTERFACE=ON -DBUILD_WITH_VECTORIZATION_SUPPORT=ON -DINSTALL_DOCUMENTATION=OFF"
          CMEEL_RUN_TESTS: False
          CMEEL_JOBS: 1
          CMEEL_LOG_LEVEL: Debug
        run: |
          pip wheel . -w dist

      - name: Move proxsuite to specific dist folder
        shell: bash -l {0}
        run: |
          mkdir -p dist_proxsuite
          mv dist/proxsuite*.whl dist_proxsuite

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist_proxsuite

  release:
    needs: "build-wheel"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      - name: Check package with twine
        run: |
          pip install twine
          # checks if files can be unzipped and if metadata is correct
          twine check --strict dist/*

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: |
          github.repository == 'Simple-Robotics/proxsuite' &&
          (github.event_name == 'release' && github.event.action == 'published')

  check:
    if: always()
    name: release-osx-win

    needs:
    - build-wheel

    runs-on: Ubuntu-latest
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
