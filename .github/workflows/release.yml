name: Release on GitHub & PyPI

on:
  pull_request:
  release:
    types:
      - published

jobs:
  build-wheel:
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.os }} ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, self-hosted-arm64]
        exclude:
          - os: self-hosted-arm64
            python-version: 3.7
    steps:
      - name: Set docker for linux
        if: contains(matrix.os, 'ubuntu')
        uses: docker://quay.io/pypa/manylinux_2_24_x86_64

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set ownership
        run: |
          # Workaround for https://github.com/actions/runner/issues/2033
          # this is to fix GIT not liking owner of the checkout dir
          chown -R $(id -u):$(id -g) $PWD
          git submodule update

      - name: Setup conda
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          channels: conda-forge
          python-version: ${{ matrix.python-version }}
          activate-environment: proxsuite

      - name: Install dependencies [Conda]
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')
        shell: bash -l {0}
        run: |
          # Workaround for https://github.com/conda-incubator/setup-miniconda/issues/186
          conda config --remove channels defaults
          mamba install doxygen graphviz eigen simde cmake compilers

      - name: Print environment [Conda]
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')
        shell: bash -l {0}
        run: |
          conda info
          mamba list
          env

      - name: Build wheel
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')
        shell: bash -l {0}
        run: |
          pip wheel . -w dist

      - name: Turn off vectorization in pyproject.toml [arm64]
        if: contains(matrix.os, 'self-hosted')
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import os
            print("Directory contents:")
            for f in os.listdir():
                print(f)
            import tomlkit
            with open("pyproject.toml") as f:
                doc = tomlkit.load(f)
            doc["build-system"]["configure-args"] = "-DBUILD_TESTING:BOOL=OFF","-DBUILD_PYTHON_INTERFACE:BOOL=ON","-DBUILD_WITH_VECTORIZATION_SUPPORT:BOOL=OFF","-DINSTALL_DOCUMENTATION:BOOL=OFF"
            with open("pyproject.toml", "w") as f:
                tomlkit.dump(doc, f)

      - name: Build wheel on self-hosted
        if: contains(matrix.os, 'self-hosted')
        shell: bash -l {0}
        run: |
          conda activate proxarm-py${{ matrix.python-version }}
          conda info
          mamba list
          env
          pip wheel . -w dist

      - name: Move proxsuite to specific dist folder
        shell: bash -l {0}
        run: |
          mkdir -p dist_proxsuite
          mv dist/proxsuite*.whl dist_proxsuite

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist_proxsuite

  release:
    needs: "build-wheel"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/download-artifact@v3

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: |
          github.repository == 'Simple-Robotics/proxsuite' &&
          (github.event_name == 'release' && github.event.action == 'published')
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
